{"version":3,"sources":["components/Header.js","components/Recipe.js","App.js","index.js"],"names":["Header","useState","toggle","setToggle","className","onClick","console","log","Recipe","title","calories","img","ingrs","map","ingr","i","text","src","alt","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","axios","get","then","res","data","hits","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","recipe","label","image","ingredients","ReactDOM","render","document","getElementById"],"mappings":"8PA2BeA,EAxBA,WACb,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAOA,OACE,iCACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,OAAd,iBACA,sBAAMA,UAAU,OAAOC,QATb,WACdF,GAAWD,GACXI,QAAQC,IAAIL,IAOR,SACGA,EACC,mBAAGE,UAAU,eAEb,mBAAGA,UAAU,wBCCVI,EAfA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACtC,OACE,gCACE,6BAAKH,IACL,6BACGG,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACT,6BAAaD,EAAKE,MAATD,QAGb,sDAAUL,KACV,qBAAKO,IAAKN,EAAKO,IAAI,S,YCqFVC,MA3Ff,WAEE,IAIA,EAA8BlB,mBAAS,IAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KAGA,EAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAGA,EAA0BtB,mBAAS,WAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACRC,MACC,CAACH,IAQJ,IAAMG,EAAa,WACjBC,IACGC,IADH,0CAGuCL,EAHvC,mBAxBa,WAwBb,oBAvBc,qCA4BXM,MAAK,SAACC,GAGLV,EAAWU,EAAIC,KAAKC,UAkB1B,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IAGA,sBAAMA,UAAU,cAAc8B,SAZhB,SAACC,GACjBA,EAAEC,iBACFb,EAAU,IACVE,EAASH,IASP,SACE,sBAAKlB,UAAU,SAAf,UAEE,uBACEiC,KAAK,OACLC,MAAOhB,EACPiB,YAAY,mBACZC,SAzBW,SAACL,GACpBZ,EAAUY,EAAEM,OAAOH,UA2Bb,wBAAQD,KAAK,SAAb,SACE,mBAAGjC,UAAU,wBAMnB,qBAAKA,UAAU,UAAf,SAGGgB,EAAQP,KAAI,SAAC6B,GAAD,OACX,cAAC,EAAD,CAEEjC,MAAOiC,EAAOA,OAAOC,MACrBjC,SAAUgC,EAAOA,OAAOhC,SACxBC,IAAK+B,EAAOA,OAAOE,MACnBhC,MAAO8B,EAAOA,OAAOG,aAJhBH,EAAOA,OAAOC,gBCpF/BG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e96ffcc2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/Header.css\";\r\n\r\nconst Header = () => {\r\n  const [toggle, setToggle] = useState(true);\r\n\r\n  const toggler = () => {\r\n    setToggle(!toggle);\r\n    console.log(toggle);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className='center'>\r\n        <h2 className='logo'>CIY</h2>\r\n        <span className='menu' onClick={toggler}>\r\n          {toggle ? (\r\n            <i className='fa fa-bars'></i>\r\n          ) : (\r\n            <i className='fa fa-times'></i>\r\n          )}\r\n        </span>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n//hooks\r\n//graphQL\r\n\r\nconst Recipe = ({ title, calories, img, ingrs }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <ul>\r\n        {ingrs.map((ingr, i) => (\r\n          <li key={i}>{ingr.text}</li>\r\n        ))}\r\n      </ul>\r\n      <p>칼로리 : {calories}</p>\r\n      <img src={img} alt='' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Recipe from \"./components/Recipe\";\r\n\r\nimport \"./css/Reset.css\";\r\nimport \"./css/App.css\";\r\n\r\nfunction App() {\r\n  //1. 계정 등록\r\n  const APP_ID = \"d5b26c47\";\r\n  const APP_KEY = \"3b49c5672b3e9cc29534494fc1c87802\";\r\n\r\n  //4. recipes 요청 결과 데이터 useState 정의\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  //10. 검색 useState 정의\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //15. 검색 문자열 useState 정의\r\n  const [query, setQuery] = useState(\"chicken\");\r\n\r\n  //5. useEffect 정의\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  //\"https://api.edamam.com/search?q=chicken&app_id=d5b26c47&app_key=3b49c5672b3e9cc29534494fc1c87802\"\r\n\r\n  //3. API 비동기 연결(axios)\r\n  //axios 설치 : https://velog.io/@sss5793/axios-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0-uuk5elxk88\r\n  //axios 사용 : https://dev.to/ms_yogii/useaxios-a-simple-custom-hook-for-calling-apis-using-axios-2dkj\r\n\r\n  const getRecipes = () => {\r\n    axios\r\n      .get(\r\n        //6. 아이디와 키값 변수처리\r\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n      )\r\n      .then((res) => {\r\n        //useEffect의 콜백 파라미터에 []를 사용하지 않으면 res.data.hits가 콘속에 계속 찍히다가 화면 오류가 난다\r\n        //console.log(res.data.hits);\r\n        setRecipes(res.data.hits);\r\n      });\r\n  };\r\n\r\n  //11. input search 기능 함수 정의\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n    //console.log(search);\r\n  };\r\n\r\n  //14 onSubmit 실행 함수 정의\r\n  const getSearch = (e) => {\r\n    e.preventDefault();\r\n    setSearch(\"\");\r\n    setQuery(search);\r\n    //console.log(search);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Header />\r\n\r\n      {/* 2. 검색창 UI 작성 */}\r\n      <form className='search_form' onSubmit={getSearch}>\r\n        <div className='center'>\r\n          {/* 12. onChange 속성에 updateSearch 함수 호출 */}\r\n          <input\r\n            type='text'\r\n            value={search}\r\n            placeholder='Search Recipe...'\r\n            onChange={updateSearch}\r\n          />\r\n          {/* 13. button에 submit 타입을 지정하면 클릭했을때 감싸는 form의 onSubmit 속성이 실행 */}\r\n          <button type='submit'>\r\n            <i className='fa fa-search'></i>\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* 7. Recipe 컴포넌트 작성 및 임포트 */}\r\n      <div className='recipes'>\r\n        {/* 8. Recipe 컴포넌트 반복 처리 */}\r\n        {/* 9. 컴포넌트에 props 지정 */}\r\n        {recipes.map((recipe) => (\r\n          <Recipe\r\n            key={recipe.recipe.label}\r\n            title={recipe.recipe.label}\r\n            calories={recipe.recipe.calories}\r\n            img={recipe.recipe.image}\r\n            ingrs={recipe.recipe.ingredients}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}